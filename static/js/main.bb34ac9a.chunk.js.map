{"version":3,"sources":["components/Header.js","components/Form.js","components/WeatherDetailComponent.js","components/WeatherDetails.js","components/Helpers.js","components/WeatherGif.js","components/WeatherSummary.js","components/WeatherMap.js","components/WeatherRange.js","components/WeatherBrief.js","components/DailyForecastWeatherDetails.js","components/DailyForecast.js","components/WeatherForecast.js","components/Weather.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","target","rel","href","icon","faCode","style","paddingRight","process","className","faMountain","faCoffee","Form","props","console","log","onSubmit","handleSubmit","type","faLocationArrow","onClick","askForGeolocation","id","name","placeholder","location","adminArea5","adminArea3","adminArea1","getFormattedLocation","faSearch","WeatherDetailComponent","header","value","WeatherDetails","getSunRiseOrFall","timestamp","moment","format","data","wind_speed","humidity","faSun","sunrise","faMoon","sunset","visibility","pressure","convertTemp","temp","toString","f","Math","round","WeatherGif","state","hasData","src","handleClick","bind","this","getGifSrc","prevProps","query","fetch","mode","response","json","gif","setState","images","original","url","alt","faSpinner","Component","WeatherSummary","weather","main","description","feels_like","today","min","max","WeatherMap","zoom","position","lat","lon","Map","center","scrollWheelZoom","TileLayer","attribution","Marker","Popup","WeatherRange","width","paddingLeft","padding","WeatherBrief","index","DailyForecastHighAndLow","faArrowRight","DailyForecastSunRiseSunSet","DailyForecastRainFall","rain","DailyForecastWeatherDetails","expanded","DailyForecast","calculateWidth","range","toFixed","calculateLeftPadding","prevState","dt","faMinusCircle","faPlusCircle","WeatherForecast","daily","weeksMin","weeksMax","i","length","getForecastHighAndLow","forecast","weeklyForecast","map","currElement","key","Weather","userAcceptedHTMLGeoLocation","getTheWeather","coords","setDefaultGeoLocation","e","longitude","latitude","perferredUnit","navigator","geolocation","getCurrentPosition","event","preventDefault","getCoordinatesFromAddress","address","results","locations","latLng","lng","apiKey","getForecast","getAddressFromCoordinates","current","hourly","minutely","Footer","size","faLightbulb","faBookOpen","faRss","alignItems","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb34ac9a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../sass/header.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCoffee,\n  faCode,\n  faMountain,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = () => {\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/gerrgg/mount-weather\"\n            >\n              <FontAwesomeIcon\n                icon={faCode}\n                style={{ paddingRight: \".5rem\" }}\n              />\n              Code\n            </a>\n          </li>\n          <li>\n            <a href={process.env.PUBLIC_URL} className=\"logo\">\n              <FontAwesomeIcon icon={faMountain} />\n              <br></br>\n              Mount Weather\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://gerrgg.github.io/resume/\"\n            >\n              <FontAwesomeIcon\n                icon={faCoffee}\n                style={{ paddingRight: \".5rem\" }}\n              />\n              Resume\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"../sass/form.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationArrow, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Form = (props) => {\n  console.log(props);\n  const getFormattedLocation = () => {\n    if (props.location) {\n      return `${props.location.adminArea5}, ${props.location.adminArea3}, ${props.location.adminArea1}`;\n    }\n  };\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <button type=\"button\">\n        <FontAwesomeIcon\n          icon={faLocationArrow}\n          onClick={props.askForGeolocation}\n        />\n      </button>\n      <input\n        id=\"search-bar\"\n        type=\"text\"\n        name=\"query\"\n        placeholder={getFormattedLocation()}\n      />\n      <button>\n        <FontAwesomeIcon icon={faSearch} />\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst WeatherDetailComponent = (props) => {\n  return (\n    <div className=\"detail\">\n      <span className=\"header\">{props.header}:</span>\n      <span className=\"value\">{props.value}</span>\n    </div>\n  );\n};\n\nexport default WeatherDetailComponent;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"../sass/weather.scss\";\nimport WeatherDetailComponent from \"./WeatherDetailComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nconst WeatherDetails = (props) => {\n  const getWind = () => `${props.data.wind_speed} mph`;\n  const getHumidity = () => `${props.data.humidity}%`;\n  const getPressure = () => `${props.data.pressure} mb`;\n  const getVisibility = () => `${props.data.visibility / 1000}km`;\n\n  const getSunRiseOrFall = (timestamp) => moment(timestamp * 1000).format(\"LT\");\n\n  return (\n    <div className=\"wrapper\">\n      <div id=\"weather-details\">\n        <WeatherDetailComponent header={\"Wind\"} value={getWind()} />\n        <WeatherDetailComponent header={\"Humidity\"} value={getHumidity()} />\n\n        <WeatherDetailComponent\n          header={<FontAwesomeIcon icon={faSun} />}\n          value={getSunRiseOrFall(props.data.sunrise)}\n        />\n\n        <WeatherDetailComponent\n          header={<FontAwesomeIcon icon={faMoon} />}\n          value={getSunRiseOrFall(props.data.sunset)}\n        />\n\n        <WeatherDetailComponent header={\"Visibility\"} value={getVisibility()} />\n        <WeatherDetailComponent header={\"Pressure\"} value={getPressure()} />\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherDetails;\n","import moment from \"moment\";\n\nexport function convertTemp(temp, toString = true) {\n  let f = ((temp - 273.15) * 9) / 5 + 32;\n  return toString ? Math.round(f) + \"°F\" : Math.round(f);\n}\n\nexport function getSunRiseOrFall(timestamp) {\n  return moment(timestamp * 1000).format(\"LT\");\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nclass WeatherGif extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      hasData: false,\n      src: \"\",\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGifSrc();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.query !== prevProps.query) {\n      this.getGifSrc();\n    }\n  }\n\n  async handleClick() {\n    await this.getGifSrc();\n  }\n\n  async getGifSrc() {\n    let query = this.props.query;\n    let apiKey = process.env.REACT_APP_GIPHY_KEY;\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/translate?api_key=${apiKey}&s=${query}`,\n        { mode: \"cors\" }\n      );\n\n      const gif = await response.json();\n\n      this.setState({ hasData: true, src: gif.data.images.original.url });\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n\n  render() {\n    return (\n      <span className=\"weather-gif\">\n        {this.state.hasData ? (\n          <img alt=\"sunny\" src={this.state.src} onClick={this.handleClick} />\n        ) : (\n          <FontAwesomeIcon icon={faSpinner} />\n        )}\n      </span>\n    );\n  }\n}\n\nexport default WeatherGif;\n","import React from \"react\";\nimport { convertTemp } from \"./Helpers\";\nimport WeatherGif from \"./WeatherGif\";\nimport WeatherDetailComponent from \"./WeatherDetailComponent\";\n\nconst WeatherSummary = (props) => {\n  return (\n    <div id=\"weather-summmary\">\n      <WeatherGif query={props.data.weather[0].main} />\n      <div className=\"summary-right\">\n        <h1>\n          {convertTemp(props.data.temp)} {props.data.weather[0].description}\n        </h1>\n        <div className=\"summary-details\">\n          <WeatherDetailComponent\n            header={\"Feels Like\"}\n            value={convertTemp(props.data.feels_like)}\n          />\n          <WeatherDetailComponent\n            header={\"Low\"}\n            value={convertTemp(props.today.temp.min)}\n          />\n          <WeatherDetailComponent\n            header={\"High\"}\n            value={convertTemp(props.today.temp.max)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherSummary;\n","import React, { Component } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\n\nclass WeatherMap extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      zoom: 7,\n    };\n  }\n\n  render() {\n    const position = [this.props.lat, this.props.lon];\n\n    return (\n      <Map center={position} zoom={this.state.zoom} scrollWheelZoom={false}>\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position}>\n          <Popup>You are here</Popup>\n        </Marker>\n      </Map>\n    );\n  }\n}\n\nexport default WeatherMap;\n","import React from \"react\";\nimport { convertTemp } from \"./Helpers\";\n\nconst WeatherRange = (props) => {\n  return (\n    <div className=\"weather-range\">\n      <div className=\"details\" style={{ width: props.width + \"%\" }}>\n        <span className=\"min\" style={{ paddingLeft: props.padding + \"%\" }}>\n          {convertTemp(props.min)}\n        </span>\n        <span className=\"bar\"></span>\n        <span className=\"max\">{convertTemp(props.max)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherRange;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst WeatherBrief = (props) => {\n  const getWeatherIcon = (icon) =>\n    `http://openweathermap.org/img/wn/${icon}.png`;\n\n  const getDayOfWeek = (timestamp) => moment(timestamp * 1000).format(\"ddd\");\n\n  return (\n    <div className=\"brief\">\n      <img\n        alt={props.weather.description}\n        src={getWeatherIcon(props.weather.icon)}\n      />\n      <span>{props.index !== 0 ? getDayOfWeek(props.timestamp) : \"Today\"}</span>\n    </div>\n  );\n};\n\nexport default WeatherBrief;\n","import React from \"react\";\nimport { convertTemp, getSunRiseOrFall } from \"./Helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DailyForecastHighAndLow = (props) => {\n  return (\n    <span className=\"daily-high-low\">\n      {props.min}\n      {<FontAwesomeIcon icon={faArrowRight} />}\n      {props.max}\n    </span>\n  );\n};\n\nconst DailyForecastSunRiseSunSet = (props) => {\n  return (\n    <div className=\"sunrise-sunset\">\n      <span className=\"sunrise\">\n        <FontAwesomeIcon icon={faSun} /> {props.sunrise}\n      </span>\n      <span className=\"sunset\">\n        <FontAwesomeIcon icon={faMoon} /> {props.sunset}\n      </span>\n    </div>\n  );\n};\n\nconst DailyForecastRainFall = (props) => {\n  return (\n    <div className=\"rainfall\">\n      <span className=\"label\">Rain:</span>\n      <span>{props.rain}</span>\n    </div>\n  );\n};\n\nconst DailyForecastWeatherDetails = (props) => {\n  const getMinTemp = () => convertTemp(props.today.temp.min);\n  const getMaxTemp = () => convertTemp(props.today.temp.max);\n  const getRainFall = () =>\n    typeof props.today.rain !== \"undefined\"\n      ? props.today.rain + \" in.\"\n      : \"0 in.\";\n\n  return (\n    <div className={`daily-details ${props.expanded ? \"expanded\" : \"\"}`}>\n      <h4 className=\"description\">{props.today.weather[0].description}</h4>\n      <div className=\"daily-details-header\">\n        <DailyForecastHighAndLow min={getMinTemp()} max={getMaxTemp()} />\n        <DailyForecastSunRiseSunSet\n          sunrise={getSunRiseOrFall(props.today.sunrise)}\n          sunset={getSunRiseOrFall(props.today.sunset)}\n        />\n        <DailyForecastRainFall rain={getRainFall()} />\n      </div>\n    </div>\n  );\n};\n\nexport default DailyForecastWeatherDetails;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTemp } from \"./Helpers\";\nimport WeatherRange from \"./WeatherRange\";\nimport WeatherBrief from \"./WeatherBrief\";\nimport DailyForecastWeatherDetails from \"./DailyForecastWeatherDetails\";\n\nclass DailyForecast extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  calculateWidth = (today, range) => {\n    /**\n     * Calculate the width of the bar by determining how much todays high compares to the high of the week\n     */\n\n    let width = convertTemp(today.max, false) / convertTemp(range.max, false);\n\n    return width.toFixed(2) * 100 - 2;\n  };\n\n  calculateLeftPadding = (today, range) => {\n    /**\n     * Calculate the width of the bar by determining how much todays high/low compares to the entire week\n     */\n    let min = convertTemp(today.min, false) - convertTemp(range.min, false);\n    let max = convertTemp(range.max, false) - convertTemp(range.min, false);\n\n    let padding = (min / max).toFixed(2) * 100;\n    return padding;\n  };\n\n  handleClick = () => {\n    this.setState((prevState) => {\n      return { expanded: !prevState.expanded };\n    });\n  };\n\n  render() {\n    let width = this.calculateWidth(this.props.today.temp, this.props.range);\n\n    let padding = this.calculateLeftPadding(\n      this.props.today.temp,\n      this.props.range\n    );\n\n    return (\n      <div className=\"daily-forecast\" onClick={this.handleClick}>\n        <div className=\"inner\">\n          <WeatherBrief\n            index={this.props.index}\n            weather={this.props.today.weather[0]}\n            timestamp={this.props.today.dt}\n          />\n\n          <WeatherRange\n            min={this.props.today.temp.min}\n            max={this.props.today.temp.max}\n            width={width}\n            padding={padding}\n          />\n\n          {!this.state.expanded ? (\n            <FontAwesomeIcon icon={faPlusCircle} />\n          ) : (\n            <FontAwesomeIcon icon={faMinusCircle} />\n          )}\n        </div>\n\n        <DailyForecastWeatherDetails\n          today={this.props.today}\n          expanded={this.state.expanded}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DailyForecast;\n","import React from \"react\";\nimport DailyForecast from \"./DailyForecast\";\n\nconst WeatherForecast = (props) => {\n  const getForecastHighAndLow = (daily) => {\n    /**\n     * Gets the weeks lowest low and highest high to calculate where to place bar and how wide\n     */\n\n    let weeksMin = 1000;\n    let weeksMax = 0;\n\n    // loop each day of the forecast\n    for (let i = 0; i < daily.length; i++) {\n      if (weeksMin > daily[i].temp.min) weeksMin = daily[i].temp.min;\n      if (weeksMax < daily[i].temp.max) weeksMax = daily[i].temp.max;\n    }\n\n    // convert and return\n    return { min: weeksMin, max: weeksMax };\n  };\n\n  let range = getForecastHighAndLow(props.forecast);\n\n  const weeklyForecast = props.forecast.map((currElement, index) => {\n    return (\n      <DailyForecast\n        key={index}\n        index={index}\n        today={currElement}\n        range={range}\n      />\n    );\n  });\n\n  return <div id=\"weather-forecast\">{weeklyForecast}</div>;\n};\n\nexport default WeatherForecast;\n","import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport WeatherDetails from \"./WeatherDetails\";\nimport WeatherSummary from \"./WeatherSummary\";\nimport WeatherMap from \"./WeatherMap\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasData: false,\n      perferredUnit: \"Fahrenheit\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // if user gives us coordinates, pass to get weather\n  userAcceptedHTMLGeoLocation = (location) =>\n    this.getTheWeather(location.coords);\n\n  // get weather of someplace nice - maybe have an array of \"cool coordinates\"\n  setDefaultGeoLocation = (e) => {\n    let defaultCoords = { longitude: -84.902156, latitude: 45.40955 };\n    this.getTheWeather(defaultCoords);\n  };\n\n  // either get user location consent or set a default location somewhere fun.\n  componentDidMount() {\n    this.setDefaultGeoLocation();\n    this.askForGeolocation();\n  }\n\n  askForGeolocation() {\n    navigator.geolocation.getCurrentPosition(this.userAcceptedHTMLGeoLocation);\n  }\n\n  async handleSubmit(event) {\n    /**\n     * Change query on form submit\n     */\n    event.preventDefault();\n\n    try {\n      let query = event.target[1].value;\n      let address = await this.getCoordinatesFromAddress(query);\n      let coords = {\n        latitude: address.results[0].locations[0].latLng.lat,\n        longitude: address.results[0].locations[0].latLng.lng,\n      };\n      this.getTheWeather(coords);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async getForecast(coords) {\n    /**\n     * Get five day forecast weather data from OWM\n     */\n    if (!coords) return;\n\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${coords.latitude}&lon=${coords.latitude}&appid=${this.props.apiKey}`,\n      { mode: \"cors\" }\n    );\n\n    return await response.json();\n  }\n\n  async getAddressFromCoordinates(coords) {\n    /**\n     * Get location information from reverse lookup on the coordinates by MapQuest API\n     */\n    if (!coords) return;\n\n    const response = await fetch(\n      `http://www.mapquestapi.com/geocoding/v1/reverse?key=${process.env.REACT_APP_MQ_KEY}&location=${coords.latitude},${coords.longitude}8&includeRoadMetadata=true&includeNearestIntersection=true`,\n      { mode: \"cors\" }\n    );\n\n    return await response.json();\n  }\n\n  async getCoordinatesFromAddress(address) {\n    /**\n     * Get location information from reverse lookup on the coordinates by MapQuest API\n     */\n    if (!address) return;\n\n    const response = await fetch(\n      `http://www.mapquestapi.com/geocoding/v1/address?key=${process.env.REACT_APP_MQ_KEY}&location=${address}`,\n      { mode: \"cors\" }\n    );\n\n    return await response.json();\n  }\n\n  async getTheWeather(coords) {\n    /**\n     * Get the weather and set the state of things\n     */\n    let forecast = await this.getForecast(coords);\n    let location = await this.getAddressFromCoordinates(coords);\n\n    // Dont change the state if we've got issues with the query\n    if (typeof forecast !== \"undefined\") {\n      this.setState({\n        current: forecast.current,\n        location: location.results[0].locations[0],\n        daily: forecast.daily,\n        hourly: forecast.hourly,\n        minutely: forecast.minutely,\n        coords: coords,\n        hasData: true,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"weather\">\n        <div id=\"search-location\">\n          <Form\n            handleSubmit={this.handleSubmit}\n            location={this.state.location}\n          />\n        </div>\n        {this.state.hasData ? (\n          <div className=\"content\">\n            <WeatherDetails data={this.state.current} />\n            <WeatherSummary\n              data={this.state.current}\n              today={this.state.daily[0]}\n            />\n            <WeatherMap\n              lat={this.state.coords.latitude}\n              lon={this.state.coords.longitude}\n            />\n            <WeatherForecast forecast={this.state.daily} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMountain,\n  faLightbulb,\n  faBookOpen,\n  faRss,\n  faCoffee,\n  faCode,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"../sass/footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div id=\"footer\">\n      <div className=\"wrapper\">\n        <div className=\"overview\">\n          <a href=\"/\" className=\"logo\">\n            <FontAwesomeIcon icon={faMountain} size=\"4x\" />\n            <br></br>\n            Mount Weather\n          </a>\n        </div>\n        <div className=\"links\">\n          <li>\n            <FontAwesomeIcon icon={faLightbulb} />\n            <a\n              href=\"https://darksky.net/forecast/55.7415,37.6156/us12/en\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Inspiration\n            </a>\n          </li>\n          <li>\n            <FontAwesomeIcon icon={faBookOpen} />\n            <a\n              href=\"https://www.theodinproject.com/courses/javascript/lessons/weather-app\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              The Odin Project\n            </a>\n          </li>\n          <li>\n            <FontAwesomeIcon icon={faRss} />\n            <a\n              href=\"http://gerrg.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              GERRG.com\n            </a>\n          </li>\n          <li>\n            <FontAwesomeIcon icon={faCoffee} />\n            <a\n              href=\"https://gerrgg.github.io/resume/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Resume\n            </a>\n          </li>\n          <li>\n            <FontAwesomeIcon icon={faCode} />\n            <a\n              href=\"https://github.com/gerrgg/mount-weather\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Source Code\n            </a>\n          </li>\n          <li>\n            <img\n              alt=\"open weather map logo\"\n              src={process.env.PUBLIC_URL + \"/open-weather-map-logo-icon.png\"}\n            />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://openweathermap.org/api\"\n            >\n              OpenWeatherMap API\n            </a>\n          </li>\n          <li style={{ alignItems: \"flex-end\" }}>\n            <img\n              alt=\"open weather map logo\"\n              src={process.env.PUBLIC_URL + \"/giphy-icon.png\"}\n            />\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://developers.giphy.com/explorer\"\n            >\n              GIPHY API\n            </a>\n          </li>\n        </div>\n      </div>\n      <p className=\"credits\">\n        Built with Love and Coffee - Gregory Bastianelli\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Weather from \"./components/Weather\";\nimport Footer from \"./components/Footer\";\nimport \"./sass/app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Weather apiKey={process.env.REACT_APP_OWM_KEY} query=\"Petoskey\" />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}