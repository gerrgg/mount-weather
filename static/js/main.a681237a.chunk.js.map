{"version":3,"sources":["components/Header.js","components/Form.js","components/WeatherDetailComponent.js","components/WeatherDetails.js","components/Helpers.js","components/WeatherGif.js","components/WeatherSummary.js","components/WeatherMap.js","components/WeatherRange.js","components/WeatherBrief.js","components/DailyForecastWeatherDetails.js","components/DailyForecast.js","components/WeatherForecast.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["Header","target","rel","href","icon","faCode","style","paddingRight","className","faMeteor","faCoffee","paddingLeft","Form","props","state","handleChange","bind","event","name","value","this","setState","onSubmit","handleSubmit","type","faLocationArrow","id","placeholder","query","onChange","faSearch","Component","WeatherDetailComponent","header","WeatherDetails","getSunRiseOrFall","timestamp","moment","format","data","wind","speed","main","humidity","faSun","sys","sunrise","faMoon","sunset","visibility","pressure","convertTemp","temp","toString","f","Math","round","WeatherGif","hasData","src","handleClick","getGifSrc","prevProps","process","fetch","mode","response","json","gif","images","original","url","console","log","alt","onClick","faSpinner","WeatherSummary","weather","description","feels_like","temp_min","temp_max","WeatherMap","zoom","position","lat","lon","Map","center","height","scrollWheelZoom","TileLayer","attribution","Marker","Popup","WeatherRange","width","padding","min","max","WeatherBrief","index","DailyForecastHighAndLow","faArrowRight","DailyForecastSunRiseSunSet","DailyForecastRainFall","rain","DailyForecastWeatherDetails","expanded","today","DailyForecast","calculateWidth","range","toFixed","calculateLeftPadding","prevState","dt","faMinusCircle","faPlusCircle","WeatherForecast","daily","weeksMin","weeksMax","i","length","getForecastHighAndLow","forecast","weeklyForecast","map","currElement","key","Weather","perferredUnit","getTheWeather","preventDefault","apiKey","coord","getCurrentWeather","weatherData","getForecast","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a681237a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../sass/header.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCoffee, faCode, faMeteor } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Header = () => {\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/gerrgg/react-to-weather\"\n            >\n              <FontAwesomeIcon\n                icon={faCode}\n                style={{ paddingRight: \".5rem\" }}\n              />\n              Source Code\n            </a>\n          </li>\n          <li>\n            <a href=\"/\" className=\"logo\">\n              <FontAwesomeIcon icon={faMeteor} />\n              <br></br>\n              React to Weather\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://gerrgg.github.io/resume/\"\n            >\n              Resume\n              <FontAwesomeIcon\n                icon={faCoffee}\n                style={{ paddingLeft: \".5rem\" }}\n              />\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport \"../sass/form.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLocationArrow, faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Form extends Component {\n  constructor(props) {\n    super();\n    this.state = {};\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit}>\n        <button type=\"button\">\n          <FontAwesomeIcon icon={faLocationArrow} />\n        </button>\n        <input\n          id=\"search-bar\"\n          type=\"text\"\n          name=\"query\"\n          placeholder={this.props.query}\n          onChange={this.handleChange}\n        />\n        <button>\n          <FontAwesomeIcon icon={faSearch} />\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\n\nconst WeatherDetailComponent = (props) => {\n  return (\n    <div className=\"detail\">\n      <span className=\"header\">{props.header}:</span>\n      <span className=\"value\">{props.value}</span>\n    </div>\n  );\n};\n\nexport default WeatherDetailComponent;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"../sass/weather.scss\";\nimport WeatherDetailComponent from \"./WeatherDetailComponent\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nconst WeatherDetails = (props) => {\n  const getWind = () => `${props.data.wind.speed} mph`;\n  const getHumidity = () => `${props.data.main.humidity}%`;\n  const getPressure = () => `${props.data.main.pressure} mb`;\n  const getVisibility = () => `${props.data.visibility / 1000}km`;\n\n  const getSunRiseOrFall = (timestamp) => moment(timestamp * 1000).format(\"LT\");\n\n  return (\n    <div className=\"wrapper\">\n      <div id=\"weather-details\">\n        <WeatherDetailComponent header={\"Wind\"} value={getWind()} />\n        <WeatherDetailComponent header={\"Humidity\"} value={getHumidity()} />\n\n        <WeatherDetailComponent\n          header={<FontAwesomeIcon icon={faSun} />}\n          value={getSunRiseOrFall(props.data.sys.sunrise)}\n        />\n\n        <WeatherDetailComponent\n          header={<FontAwesomeIcon icon={faMoon} />}\n          value={getSunRiseOrFall(props.data.sys.sunset)}\n        />\n\n        <WeatherDetailComponent header={\"Visibility\"} value={getVisibility()} />\n        <WeatherDetailComponent header={\"Pressure\"} value={getPressure()} />\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherDetails;\n","import moment from \"moment\";\n\nexport function convertTemp(temp, toString = true) {\n  let f = ((temp - 273.15) * 9) / 5 + 32;\n  return toString ? Math.round(f) + \"°F\" : Math.round(f);\n}\n\nexport function getSunRiseOrFall(timestamp) {\n  return moment(timestamp * 1000).format(\"LT\");\n}\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\n\nclass WeatherGif extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      hasData: false,\n      src: \"\",\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getGifSrc();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.query !== prevProps.query) {\n      this.getGifSrc();\n    }\n  }\n\n  async handleClick() {\n    await this.getGifSrc();\n  }\n\n  async getGifSrc() {\n    let query = this.props.query;\n    let apiKey = process.env.REACT_APP_GIPHY_KEY;\n\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/translate?api_key=${apiKey}&s=${query}`,\n        { mode: \"cors\" }\n      );\n\n      const gif = await response.json();\n\n      this.setState({ hasData: true, src: gif.data.images.original.url });\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n\n  render() {\n    return (\n      <span className=\"weather-gif\">\n        {this.state.hasData ? (\n          <img alt=\"sunny\" src={this.state.src} onClick={this.handleClick} />\n        ) : (\n          <FontAwesomeIcon icon={faSpinner} />\n        )}\n      </span>\n    );\n  }\n}\n\nexport default WeatherGif;\n","import React, { Component } from \"react\";\nimport { convertTemp } from \"./Helpers\";\nimport WeatherGif from \"./WeatherGif\";\nimport WeatherDetailComponent from \"./WeatherDetailComponent\";\n\nclass WeatherSummary extends Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return (\n      <div id=\"weather-summmary\">\n        <WeatherGif query={this.props.data.weather[0].main} />\n        <div className=\"summary-right\">\n          <h1>\n            {convertTemp(this.props.data.main.temp)}{\" \"}\n            {this.props.data.weather[0].description}\n          </h1>\n          <div className=\"summary-details\">\n            <WeatherDetailComponent\n              header={\"Feels Like\"}\n              value={convertTemp(this.props.data.main.feels_like)}\n            />\n            <WeatherDetailComponent\n              header={\"Low\"}\n              value={convertTemp(this.props.data.main.temp_min)}\n            />\n            <WeatherDetailComponent\n              header={\"High\"}\n              value={convertTemp(this.props.data.main.temp_max)}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WeatherSummary;\n","import React, { Component } from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\n\nclass WeatherMap extends Component {\n  constructor(props) {\n    super();\n\n    this.state = {\n      zoom: 7,\n    };\n  }\n\n  render() {\n    const position = [this.props.lat, this.props.lon];\n\n    return (\n      <Map\n        center={position}\n        zoom={this.state.zoom}\n        style={{ height: 400 }}\n        scrollWheelZoom={false}\n      >\n        <TileLayer\n          attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={position}>\n          <Popup>You are here</Popup>\n        </Marker>\n      </Map>\n    );\n  }\n}\n\nexport default WeatherMap;\n","import React from \"react\";\nimport { convertTemp } from \"./Helpers\";\n\nconst WeatherRange = (props) => {\n  return (\n    <div className=\"weather-range\">\n      <div className=\"details\" style={{ width: props.width + \"%\" }}>\n        <span className=\"min\" style={{ paddingLeft: props.padding + \"%\" }}>\n          {convertTemp(props.min)}\n        </span>\n        <span className=\"bar\"></span>\n        <span className=\"max\">{convertTemp(props.max)}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherRange;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst WeatherBrief = (props) => {\n  const getWeatherIcon = (icon) =>\n    `http://openweathermap.org/img/wn/${icon}.png`;\n\n  const getDayOfWeek = (timestamp) => moment(timestamp * 1000).format(\"ddd\");\n\n  return (\n    <div className=\"brief\">\n      <img\n        alt={props.weather.description}\n        src={getWeatherIcon(props.weather.icon)}\n      />\n      <span>{props.index !== 0 ? getDayOfWeek(props.timestamp) : \"Today\"}</span>\n    </div>\n  );\n};\n\nexport default WeatherBrief;\n","import React from \"react\";\nimport { convertTemp, getSunRiseOrFall } from \"./Helpers\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowRight, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DailyForecastHighAndLow = (props) => {\n  return (\n    <span className=\"daily-high-low\">\n      {props.min}\n      {<FontAwesomeIcon icon={faArrowRight} />}\n      {props.max}\n    </span>\n  );\n};\n\nconst DailyForecastSunRiseSunSet = (props) => {\n  return (\n    <div className=\"sunrise-sunset\">\n      <span className=\"sunrise\">\n        <FontAwesomeIcon icon={faSun} /> {props.sunrise}\n      </span>\n      <span className=\"sunset\">\n        <FontAwesomeIcon icon={faMoon} /> {props.sunset}\n      </span>\n    </div>\n  );\n};\n\nconst DailyForecastRainFall = (props) => {\n  return (\n    <div className=\"rainfall\">\n      <span className=\"label\">Rain:</span>\n      <span>{props.rain}</span>\n    </div>\n  );\n};\n\nconst DailyForecastWeatherDetails = (props) => {\n  const getMinTemp = () => convertTemp(props.today.temp.min);\n  const getMaxTemp = () => convertTemp(props.today.temp.max);\n  const getRainFall = () =>\n    typeof props.today.rain !== \"undefined\"\n      ? props.today.rain + \" in.\"\n      : \"0 in.\";\n\n  return (\n    <div className={`daily-details ${props.expanded ? \"expanded\" : \"\"}`}>\n      <h4 className=\"description\">{props.today.weather[0].description}</h4>\n      <div className=\"daily-details-header\">\n        <DailyForecastHighAndLow min={getMinTemp()} max={getMaxTemp()} />\n        <DailyForecastSunRiseSunSet\n          sunrise={getSunRiseOrFall(props.today.sunrise)}\n          sunset={getSunRiseOrFall(props.today.sunset)}\n        />\n        <DailyForecastRainFall rain={getRainFall()} />\n      </div>\n    </div>\n  );\n};\n\nexport default DailyForecastWeatherDetails;\n","import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faMinusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { convertTemp } from \"./Helpers\";\nimport WeatherRange from \"./WeatherRange\";\nimport WeatherBrief from \"./WeatherBrief\";\nimport DailyForecastWeatherDetails from \"./DailyForecastWeatherDetails\";\n\nclass DailyForecast extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  calculateWidth = (today, range) => {\n    /**\n     * Calculate the width of the bar by determining how much todays high compares to the high of the week\n     */\n\n    let width = convertTemp(today.max, false) / convertTemp(range.max, false);\n\n    return width.toFixed(2) * 100 - 2;\n  };\n\n  calculateLeftPadding = (today, range) => {\n    /**\n     * Calculate the width of the bar by determining how much todays high/low compares to the entire week\n     */\n    let min = convertTemp(today.min, false) - convertTemp(range.min, false);\n    let max = convertTemp(range.max, false) - convertTemp(range.min, false);\n\n    let padding = (min / max).toFixed(2) * 100;\n    return padding;\n  };\n\n  handleClick = () => {\n    this.setState((prevState) => {\n      return { expanded: !prevState.expanded };\n    });\n  };\n\n  render() {\n    let width = this.calculateWidth(this.props.today.temp, this.props.range);\n\n    let padding = this.calculateLeftPadding(\n      this.props.today.temp,\n      this.props.range\n    );\n\n    return (\n      <div className=\"daily-forecast\" onClick={this.handleClick}>\n        <div className=\"inner\">\n          <WeatherBrief\n            index={this.props.index}\n            weather={this.props.today.weather[0]}\n            timestamp={this.props.today.dt}\n          />\n\n          <WeatherRange\n            min={this.props.today.temp.min}\n            max={this.props.today.temp.max}\n            width={width}\n            padding={padding}\n          />\n\n          {!this.state.expanded ? (\n            <FontAwesomeIcon icon={faPlusCircle} />\n          ) : (\n            <FontAwesomeIcon icon={faMinusCircle} />\n          )}\n        </div>\n\n        <DailyForecastWeatherDetails\n          today={this.props.today}\n          expanded={this.state.expanded}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DailyForecast;\n","import React from \"react\";\nimport DailyForecast from \"./DailyForecast\";\n\nconst WeatherForecast = (props) => {\n  const getForecastHighAndLow = (daily) => {\n    /**\n     * Gets the weeks lowest low and highest high to calculate where to place bar and how wide\n     */\n    let weeksMin = 1000;\n    let weeksMax = 0;\n\n    // loop each day of the forecast\n    for (let i = 0; i < daily.length; i++) {\n      if (weeksMin > daily[i].temp.min) weeksMin = daily[i].temp.min;\n      if (weeksMax < daily[i].temp.max) weeksMax = daily[i].temp.max;\n    }\n\n    // convert and return\n    return { min: weeksMin, max: weeksMax };\n  };\n\n  let range = getForecastHighAndLow(props.forecast.daily);\n\n  const weeklyForecast = props.forecast.daily.map((currElement, index) => {\n    return (\n      <DailyForecast\n        key={index}\n        index={index}\n        today={currElement}\n        range={range}\n      />\n    );\n  });\n\n  return <div id=\"weather-forecast\">{weeklyForecast}</div>;\n};\n\nexport default WeatherForecast;\n","import React, { Component } from \"react\";\nimport Form from \"./Form\";\nimport WeatherDetails from \"./WeatherDetails\";\nimport WeatherSummary from \"./WeatherSummary\";\nimport WeatherMap from \"./WeatherMap\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasData: false,\n      perferredUnit: \"Fahrenheit\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.getTheWeather();\n  }\n\n  handleSubmit(event) {\n    /**\n     * Change query on form submit\n     */\n    event.preventDefault();\n    let query = event.target[1].value;\n    if (query.length) this.getTheWeather(query);\n  }\n\n  async getCurrentWeather(query) {\n    /**\n     * Get current weather data from OWM\n     */\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${query}&appid=${this.props.apiKey}`,\n      { mode: \"cors\" }\n    );\n\n    return await response.json();\n  }\n\n  async getForecast(coord) {\n    /**\n     * Get five day forecast weather data from OWM\n     */\n    const response = await fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${coord.lat}&lon=${coord.lon}&exclude=current&appid=${this.props.apiKey}`,\n      { mode: \"cors\" }\n    );\n\n    return await response.json();\n  }\n\n  async getTheWeather(query = this.props.query) {\n    let weatherData = await this.getCurrentWeather(query);\n    let forecast = await this.getForecast(weatherData.coord);\n\n    this.setState({\n      weather: weatherData,\n      forecast: forecast,\n      hasData: true,\n    });\n  }\n\n  render() {\n    console.log(this.state.forecast);\n    return (\n      <div id=\"weather\">\n        <div id=\"search-location\">\n          <Form handleSubmit={this.handleSubmit} query={this.props.query} />\n        </div>\n        {this.state.hasData ? (\n          <div>\n            <WeatherDetails data={this.state.weather} />\n            <WeatherSummary data={this.state.weather} />\n            <WeatherMap\n              lat={this.state.weather.coord.lat}\n              lon={this.state.weather.coord.lon}\n            />\n            <WeatherForecast forecast={this.state.forecast} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Weather from \"./components/Weather\";\nimport \"./sass/app.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Weather apiKey={process.env.REACT_APP_OWM_KEY} query=\"Moscow\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}